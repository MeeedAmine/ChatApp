{"version":3,"sources":["pages/Home.js","components/OnlineUser.js","pages/Chat.js","components/Message.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","form","margin","spacing","alignItems","textAlign","marginTop","container","maxWidth","height","background","display","flexDirection","title","username","room","btn","Home","classes","history","useHistory","useState","setRoom","setUsername","usernameError","setUsernameError","roomError","setRoomError","Container","className","Typography","variant","noValidate","autoComplete","onSubmit","e","preventDefault","push","TextField","id","label","onChange","target","value","InputProps","startAdornment","InputAdornment","position","required","error","Button","type","color","endIcon","borderRadius","width","marginBottom","avatar","text","justifyContent","marginLeft","fontSize","OnlineUser","letter","toUpperCase","Avatar","socket","border","containerAdmin","time","admin","sender","receiver","Message","message","isAdmin","isSender","clsx","padding","gridTemplateColumns","gridTemplateRows","chatInfo","gridArea","root","flexGrow","users","overflowY","maxHeight","chatWindow","backgroundColor","inputWrapper","inputField","input","Chat","END_POINT","location","useLocation","setUsers","messages","setMessages","setMessage","useEffect","queryString","parse","search","console","log","io","emit","on","msg","DummyDiv","divRef","useRef","current","scrollIntoView","behavior","ref","href","map","user","newMessage","Icon","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.885ae105.chunk.js","sourcesContent":["import React from 'react'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { Container, FormControl, FormHelperText, InputLabel, NativeSelect, Typography } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n      margin: theme.spacing(1),\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      marginTop: \"40px\"\r\n    },\r\n    container: {\r\n        maxWidth: \"500px\",\r\n        height: \"400px\",\r\n        background: \"#f9f9f9\",\r\n        margin: \"80px auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\"\r\n    },\r\n    title: {\r\n        marginTop: \"35px\"\r\n    },\r\n    username: {\r\n        display: \"flex\",\r\n        marginTop: \"15px\"\r\n    },\r\n    room: {\r\n        display: \"flex\",\r\n        marginTop: \"15px\"\r\n    },\r\n    btn: {\r\n        marginTop: \"15px\"\r\n    }\r\n  }));\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [room, setRoom] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [usernameError, setUsernameError] = useState(false);\r\n    const [roomError, setRoomError] = useState(false);\r\n    \r\n    const handleRoom = (e) => {\r\n        const newRoom = e.target.value;\r\n        setRoom(newRoom);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(username === \"\"){\r\n            setUsernameError(true);\r\n        }\r\n        if(room === \"\"){\r\n            setRoomError(true);\r\n        }\r\n        if(username && room){\r\n            history.push(`/chat?username=${username}&room=${room}`)\r\n        }\r\n    }\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            >\r\n                Join a room and chat\r\n            </Typography>\r\n            <form className={classes.form} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <TextField\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    InputProps={{\r\n                    startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <AccountCircle />\r\n                    </InputAdornment>\r\n                    ),\r\n                    }}\r\n                    required\r\n                    error={usernameError}\r\n                    className={classes.username}\r\n                />\r\n                <TextField\r\n                    id=\"room\"\r\n                    label=\"Room or ID\"\r\n                    onChange={(e) => setRoom(e.target.value)}\r\n                    InputProps={{\r\n                    startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <ForumIcon />\r\n                    </InputAdornment>\r\n                    ),\r\n                    }}\r\n                    error={roomError}\r\n                    required\r\n                    className={classes.room}\r\n                />\r\n                {/* <FormControl required className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"room\">Rooms</InputLabel>\r\n                    <NativeSelect\r\n                    value={room}\r\n                    onChange={handleRoom}\r\n                    >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    <option value={\"Python\"}>Python</option>\r\n                    <option value={\"Javascript\"}>Javascript</option>\r\n                    <option value={\"Chess\"}>Chess</option>\r\n                    </NativeSelect>\r\n                <FormHelperText>Choose a room to join</FormHelperText>\r\n                </FormControl> */}\r\n                <Button \r\n                type=\"submit\" \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                endIcon={<ArrowForwardIosIcon />}\r\n                className={classes.btn}\r\n                >\r\n                Join\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n","import { Avatar, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n// const useStyles = makeStyles({\r\n//     user: {\r\n//         width: \"60%\",\r\n//         marginBottom: \"5px\"\r\n//     },\r\n//     label:{\r\n\r\n//     }\r\n// })\r\n\r\nfunction random(colors){\r\n    return colors[Math.floor(Math.random() * colors.length)];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        background: \"#00B2FF\",\r\n        borderRadius: 30,\r\n        display: 'inline-flex',\r\n        height: 40,\r\n        width: \"90%\",\r\n        marginBottom: \"2px\"\r\n    },\r\n    avatar: {\r\n        position: \"relative\" ,\r\n        background: \"#006AFF\"\r\n    },\r\n    text:{\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginLeft: \"30px\",\r\n      fontSize: \"20px\"\r\n    }\r\n})\r\nexport default function OnlineUser({username}) {\r\n    const classes = useStyles();\r\n    const letter = username[0].toUpperCase();\r\n    return (\r\n        <div className={classes.container}>\r\n            <Avatar className={classes.avatar}>{letter}</Avatar>\r\n            <Typography className={classes.text}>\r\n                {username}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Container, Tabs, Tab, TextField, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport OnlineUser from '../components/OnlineUser';\r\nimport { useState, useEffect } from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport io from \"socket.io-client\";\r\nimport queryString from \"query-string\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport Message from '../components/Message';\r\nlet socket;\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n     width: 1080,\r\n     height: 700,\r\n     background: \"#00B2FF\",\r\n     padding: \"10px\",\r\n     margin: \"30px 10%\",\r\n     display: \"grid\", \r\n     gridTemplateColumns: \"repeat(3, 1fr)\",\r\n     gridTemplateRows: \"1fr 1fr 1fr\",\r\n     \r\n    },\r\n    chatInfo:{\r\n      gridArea: \"1 / 1 / 4 / 2\",\r\n      padding: \"10px\",\r\n      margin: \"30px\",\r\n      background: \"#5C79FF\",\r\n      color: \"#f9f9f9\",\r\n      height:\"85%\",\r\n      borderRadius: 30\r\n    },\r\n    root: {\r\n     flexGrow: 1,\r\n     display: 'flex',\r\n     flexDirection: \"column\",\r\n     height: 180,\r\n     justifyContent: \"center\",\r\n     alignItems: \"center\",\r\n\r\n     },\r\n     room:{\r\n      borderRadius: 15,\r\n      display: 'inline-flex',\r\n      height: 40,\r\n      width: \"80%\",\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      background: \"#96a6c9\"\r\n     },\r\n     btn: {\r\n      marginTop: \"6px\",\r\n      marginLeft: \"2px\",\r\n      display: \"flex\"\r\n     },\r\n     users: {\r\n       overflowY: \"scroll\",\r\n       margin: \"20px\",\r\n       maxHeight: \"200px\"\r\n     },\r\n     chatWindow: {\r\n       gridArea: \"1 / 2 / 3 / 4\",\r\n       padding: \"20px\",\r\n       marginTop: \"30px\",\r\n       width: \"600px\",\r\n       height: \"450px\",\r\n       backgroundColor: \"#fff\",\r\n       borderRadius: \"30px\",\r\n       maxHeight: \"500px\", //TODO change it to the right max after testing displaying many messages\r\n       overflowY: \"scroll\",\r\n\r\n     },\r\n     inputWrapper:{\r\n       gridArea: \"3 / 2 / 4 / 4\",\r\n       display: \"flex\",\r\n       alignItems: \"center\"\r\n     },\r\n     inputField:{\r\n       width: \"550px\",\r\n     },\r\n     input: {\r\n      backgroundColor: \"white\"\r\n      }\r\n   }));\r\n\r\n\r\n\r\n\r\nexport default function Chat() {\r\n    const END_POINT = \"https://chatappam.herokuapp.com/api\";\r\n    const location = useLocation();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n    const [users, setUsers] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n      const {username, room} = queryString.parse(location.search);\r\n      \r\n      setUsername(username);\r\n      setRoom(room);\r\n      console.log(username, room);\r\n\r\n      socket = io(END_POINT);\r\n      // Join chatroom\r\n      socket.emit('joinRoom', {username, room});\r\n      \r\n    }, [END_POINT, location.search]);\r\n\r\n  useEffect(() => {\r\n      socket.on(\"message\", msg => {\r\n        setMessages(messages => ([...messages, msg]));\r\n      });\r\n      // Get room and users \r\n      socket.on(\"roomUsers\", ({ room, users}) => {\r\n        setUsers(users);\r\n        setRoom(room);\r\n      });\r\n      \r\n    }, []);\r\n\r\n  // handling scrolling to bottom of the chat window\r\n  const DummyDiv = () => {\r\n    const divRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n      divRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    });\r\n  \r\n    return <div ref={divRef} />;\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if(message){\r\n          socket.emit(\"chatMessage\", message);\r\n          setMessage(\"\");\r\n          e.target.value = \"\";\r\n      }\r\n    }\r\n    const handleMessage = (e) => {\r\n      const newMessage = e.target.value;\r\n      setMessage(newMessage);\r\n    }\r\n    return (\r\n        <Container className={classes.container}>\r\n        <div className={classes.chatInfo}>\r\n          <Typography variant=\"h3\">\r\n            Room\r\n          </Typography>\r\n          <div className={classes.root}>\r\n            \r\n          <Typography\r\n          variant=\"h4\"\r\n          className={classes.room}>\r\n            {room}\r\n          </Typography>\r\n          <Button\r\n            className={classes.btn}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            endIcon={<ExitToAppIcon />}\r\n            href=\"/\"\r\n          >\r\n          Leave\r\n          </Button>\r\n          </div>\r\n          <Typography variant=\"h4\">Online Users</Typography>\r\n          <div className={classes.users}>\r\n            {users && users.map(user => ( <OnlineUser username={user.username} key={user.id} /> ))}\r\n          </div>\r\n        </div>\r\n        <div className={classes.chatWindow}>\r\n        {\r\n          messages.map((msg) => (\r\n            <Message message={msg} sender={username} key={msg.id}/>\r\n          ))\r\n        }\r\n        {/* scroll to bottom of the window when entering a message */}\r\n        <DummyDiv />\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <TextField \r\n          id=\"message\"\r\n          value={message}\r\n          label=\"Type a message\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.inputField}\r\n          onChange={handleMessage}\r\n          InputProps={{\r\n            className: classes.input,\r\n          }}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            endIcon={<Icon>send</Icon>}\r\n          >\r\n          Send\r\n          </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    )\r\n}\r\n","import { makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        background: \"#50ebc6\",\r\n        border: \"solid 1px #0af0b9\",\r\n        borderRadius: \"12px\",\r\n        marginBottom: \"2px\",\r\n        width: \"40%\",\r\n        display: \"inline-block\",\r\n        textAlign: \"left\"\r\n    },\r\n    containerAdmin: {\r\n        background: \"#4bc3eb\",\r\n        border: \"solid 1px #a6dbed\",\r\n        borderRadius: \"12px\",\r\n        marginBottom: \"2px\",\r\n        width: \"40%\",\r\n        display: \"inline-block\",\r\n        textAlign: \"center\"\r\n    },\r\n    username:{\r\n        fontSize: \"12px\",\r\n        borderRadius: \"12px\",\r\n        margin: \"0px 3px\",\r\n        \r\n    },\r\n    text:{\r\n        margin: \"0px 5px\"\r\n    },\r\n    time:{\r\n        margin: \"0px 2px\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    admin: {\r\n        textAlign: \"center\"\r\n    },\r\n    sender: {\r\n        textAlign: \"right\"\r\n    },\r\n    receiver: {\r\n        textAlign: \"left\"\r\n    }\r\n})\r\n\r\nexport default function Message({message, sender}) {\r\n    const classes = useStyles();\r\n    const [isAdmin, setIsAdmin] = useState(message.username === \"ChatApp Bot\" ? true : false);\r\n    const [isSender, setIsSender] = useState(message.username === sender ? true : false);\r\n\r\n    return (\r\n        <div className={\r\n            clsx({\r\n                [classes.sender]: isSender && !isAdmin,\r\n                [classes.receiver]: !isSender && !isAdmin,\r\n                [classes.admin] : isAdmin,\r\n            })}>\r\n            <div className={isAdmin ? classes.containerAdmin : classes.container}>\r\n            {!isAdmin && <Typography \r\n            variant=\"body2\" \r\n            className={classes.username}\r\n            >\r\n                {message.username}\r\n            </Typography>}\r\n             <Typography variant=\"body1\" className={classes.text}>\r\n                 {message.text}\r\n            </Typography>\r\n             {!isAdmin && <Typography variant=\"caption\" className={classes.time}>\r\n                 {message.time}\r\n            </Typography>}\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Chat from \"./pages/Chat\";\n\n\n\n\nfunction App() {\n  \n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n            <Home />\n        </Route>\n        <Route path=\"/chat\">\n            <Chat />\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}